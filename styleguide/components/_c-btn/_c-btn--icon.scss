// Icon Buttons
//
// .c-btn--icon - default (Icon only - Text Visuall Hidden)
// .c-btn--icon-left - Icon left of visible text
// .c-btn--icon-right - Icon right side of visible text
//
// markup:
// <a href="#" class="{$modifiers}">{$modifiers}</a>
//
// Styleguide 2.1.2

%c-btn--icon {
  @extend %c-btn;
  position: relative;
  border-color: palette(grey, mediumlight);

  &:hover,
  &:focus,
  &:active {
    background-color: palette(grey, xlight);
    color: palette(grey);
  }
}

%c-btn--left,
.c-btn--left {
  @extend %c-btn--icon;
  // See config/mixins/svg-position.scss
  @include svg-inline(
    $baseline: rem($base-line-height), // font baseline
    $svg-width: ru(0.75), // SVG width (units same as typography)
    $svg-height: ru(0.75), // SVG height
    $svg-pad-right: ru(0.25), // padding on right side of SVG
    $svg-pad-left: 0, // padding on left side of SVG
    $container-vertical-padding: ru(0.5), // Top & bottom padding for container
    $container-padding-left: ru(1), // Left padding for container
    $container-padding-right: ru(1), // Right padding for container    $svg-class: 'svg', // Class for the SVG inside the parent
    $h-alignment: 'left', // Align Icon on 'left' or 'right'
    $v-alignment: 'top'); // Align Icon 'middle' or 'top'
}

%c-btn--right,
.c-btn--right {
  @extend %c-btn--icon;
  @include svg-inline(
    $baseline: rem($base-line-height), // font baseline
    $svg-width: ru(0.75), // SVG width (units same as typography)
    $svg-height: ru(0.75), // SVG height
    $svg-pad-right: 0, // padding on left side of SVG
    $svg-pad-left: ru(0.5), // padding on right side of SVG
    $container-vertical-padding: ru(0.5), // Top & bottom padding for container
    $container-padding-left: ru(1), // Left padding for container
    $container-padding-right: ru(0.75), // Right padding for container
    $svg-class: 'svg', // Class for the SVG inside the parent
    $h-alignment: 'right', // Align Icon on 'left' or 'right'
    $v-alignment: 'top'); // Align Icon 'middle' or 'top'

  svg {
    position: absolute;
    top: ru(2 / 3);
    right: ru(1 / 3);
  }
}
