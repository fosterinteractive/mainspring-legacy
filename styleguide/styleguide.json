{"sections":[{"header":"Global","description":"<p class=\"sg\">Glocal elements style default HTML Elements and user generated content\nor WYSIWYG editors. It also includes common patterns that are reused\nthoughout the site like Typography, Images, SVGs, Forms, Lists, and print styles.</p>\n<p class=\"sg\"><em>Uses Hacked Version of Normalize 5.0.3 (See section 1.99)</em></p>\n<p class=\"sg\"><b>Naming Patterns</b></p>\n<pre class=\"sg\">\n p ul li (Default HTML Elements)\n.g-global-style__element\n.g-global-style--modifier\n.g-global-style--modifier__element\n.g-global-style__element--modifier\n</pre>","modifiers":[],"deprecated":false,"experimental":false,"reference":"1","markup":null,"css":"@import 'global/g--functions/g--functions';\n\n// @import 'global/variables';\n// @import 'global/mixins';\n// @import 'global/vendor/normalize';\n// @import 'global/g-type';\n// @import 'global/g-link';\n// @import 'global/g-list';\n// @import 'global/g-svg';\n// @import 'global/g-form';\n// @import 'global/g-image';\n// @import 'global/g-table';\n// @import 'global/print';","syntax":"scss","file":"style.scss","wrapper":"<sg-wrapper-content/>","variables":[],"fileHash":"fb578f5624e9d305f6a33f2df19ef188"},{"header":"Components","description":"<p class=\"sg\">Components are discreet parts of the UI. They general can scale to fit a\nrange of sizes of containers (See Layouts).</p>\n<p class=\"sg\">Components can appear inside components. Components\nMay adjust their own layouts depending on the size of their containers.\nThis is typical done with <a href=\"https://github.com/Snugug/eq.js\" class=\"sg\">eq.js</a> script\nfor element queries.</p>\n<p class=\"sg\"><b>Naming Patterns</b></p>\n<pre class=\"sg\">\n.c-component__element\n.c-component--modifier\n.c-component--modifier__element\n.c-component__element--modifier\n</pre>","modifiers":[],"deprecated":false,"experimental":false,"reference":"2","markup":null,"css":"// Components (with EJ.js based layouts)\n// @import 'components/c-btn/c-btn';\n// @import 'components/c-logo';\n// @import 'components/c-nav/c-nav';\n// @import 'components/c-tab/c-tab';\n// @import 'components/c-quote';\n// @import 'components/c-accordion/c-accordion';\n// @import 'components/c-pager/c-pager';\n\n// Component Partial Naming Examples\n// @import 'components/btn--icon';\n// @import 'components/btn--accordion';\n// @import 'components/menu-main';\n// @import 'components/menu-mobile';\n// @import 'components/menu-subfooter';\n// @import 'components/masthead';\n// @import 'components/summary';\n// @import 'components/progress';\n// @import 'components/action';\n// @import 'components/person';\n// @import 'components/ad';\n// @import 'components/alert';\n// @import 'components/listing';\n// @import 'components/tabs';\n// @import 'components/toggle';\n// @import 'components/message';\n// @import 'components/calendar';\n// @import 'components/carousel'; <-- Boo ;(\n// @import 'components/card';\n// @import 'components/callout';\n// @import 'components/cart';","syntax":"scss","file":"style.scss","wrapper":"<sg-wrapper-content/>","variables":[],"fileHash":"fb578f5624e9d305f6a33f2df19ef188"},{"header":"Layouts","description":"<p class=\"sg\"></p><h2 id=\"custom-layouts\" class=\"sg\" name=\"custom-layouts\">Custom Layouts</h2><p class=\"sg\"></p>\n<p class=\"sg\">Layouts position components in a page. They often implenent width based\nMedia queries in a mobile first strategy. Typically there is a layout\npartial for different regions in the website like the page (wrapper),\nheader, footer, etc. These Layouts tend to be unique and not reusable.</p>\n<p class=\"sg\"><b>Naming Patterns</b></p>\n<pre class=\"sg\">\n.l-layout__element\n.l-layout--variation\n.l-layout--modifier__element\n.l-layout__element--modifier\n.l-header\n.l-header__logo\n.l-header__tagline\n.l-header--sticky &gt;&gt; EG. the header is smaller &amp; fixed postion when you scroll...\n.l-header--sticky__logo\n</pre>\n<p class=\"sg\"></p><h2 id=\"reusable-layouts\" class=\"sg\" name=\"reusable-layouts\">Reusable Layouts</h2>\n<h3 id=\"media-queries\" class=\"sg\" name=\"media-queries\">Media Queries</h3><p class=\"sg\"></p>\n<p class=\"sg\">Other layouts are reusable such as generic grid containers. These can be\neither (width) media query or eq.js based layouts.\nColumn layouts express the number of columns with a &quot;cols#&quot; string, and a optionally\na modifer which expresses the number of columns the layout has from smallest\nwidth to largest width.</p>\n<p class=\"sg\"><i> Yes you can indeed used brackets and commas in css if you escape with a backslash</i></p>\n<p class=\"sg\"><b>Media Query Patterns</b></p>\n<pre class=\"sg\">\n.l-2cols &gt;&gt; 2 columns (equal width)\n.l-2cols--1-2 &gt;&gt; 1 column @ default width, 2 columns @ larger width\n.l-5col--1-2-5 &gt;&gt; 1 to 2 to 5 columns as the width increases\n.l-2cols(25,75) &gt;&gt; 2 columns in ratio of 25% to 75%\n</pre>\n<p class=\"sg\"></p><h3 id=\"eq-js\" class=\"sg\" name=\"eq.js\">eq.js</h3><p class=\"sg\"></p>\n<p class=\"sg\">eq.js &quot;breakpoints&quot; are defined in HTML. This allows them to be more\nflexible as you can simply add or remove &quot;data-eq-pts&quot; in your data attibutes\nof the layout wrapper class. Details are in the <a href=\"https://github.com/Snugug/eq.js\" class=\"sg\">eq.js</a> docs.</p>\n<div hljs=\"\">\n&lt;div class=&quot;l-eq&quot; data-eq-pts=&quot;l-eq--2col: 400 l-eq--3col: 600&quot;&gt; CONTENT\n&lt;/div&gt;\n</div><p class=\"sg\"><b>eq.js Patterns</b>\n<i></i></p>\n<pre class=\"sg\">\n.l-eq--2cols &gt;&gt; 2 columns when\n.l-eq--5cols\n.l-eq--2col--1-2(60,40)  &gt;&gt; 1 to 2 columns. 2 columns in ratio of 60% 40% .\n</pre>","modifiers":[],"deprecated":false,"experimental":false,"reference":"3","markup":null,"css":"// @import 'layouts/l-eq';\n// @import 'layouts/l-page';\n// @import 'layouts/l-form';\n\n// Other Layout Naming Examples\n// @import 'layouts/l-header';\n// @import 'layouts/l-page';\n// @import 'layouts/l-2col';\n// @import 'layouts/l-5col';\n// @import 'layouts/l-megamenu';\n// @import 'layouts/l-footer';\n// @import 'layouts/l-form';\n\n\n\n\n\n// Vendor\n// @import 'vendor/system.base';\n// @import 'vendor/remodal';\n// @import 'vendor/slidebar';\n// @import 'vendor/slick';","syntax":"scss","file":"style.scss","wrapper":"<sg-wrapper-content/>","variables":[],"fileHash":"fb578f5624e9d305f6a33f2df19ef188"},{"header":"Utility","description":"<p class=\"sg\">Generic modifier components. Oftern extended from other components. Each\nUtility should be very specific and do only 1 job. This seciton also documents\nGeneric Mixins and Extendables</p>\n<p class=\"sg\"><b>Utility Naming Patterns</b></p>\n<pre class=\"sg\">\n.u-utility__element\n.u-utility--modifier\n.u-utility--modifier__element\n.u-utility__element--modifier\n</pre>\n<p class=\"sg\"><b>Mixin Naming Patterns</b>\n@TODO</p>\n","modifiers":[],"deprecated":false,"experimental":false,"reference":"4","markup":null,"css":"// Utiltiy Functions\n@import 'utility/u-animation';\n@import 'utility/u-clearfix';\n@import 'utility/u-inline-links';\n@import 'utility/u-list';\n@import 'utility/u-remove-child';\n// @import 'utility/u-text-hide';\n// @import 'utility/u-visually--hidden';","syntax":"scss","file":"style.scss","wrapper":"<sg-wrapper-content/>","variables":[],"fileHash":"fb578f5624e9d305f6a33f2df19ef188"}],"variables":[],"section":[{"header":"Global","description":"<p class=\"sg\">Glocal elements style default HTML Elements and user generated content\nor WYSIWYG editors. It also includes common patterns that are reused\nthoughout the site like Typography, Images, SVGs, Forms, Lists, and print styles.</p>\n<p class=\"sg\"><em>Uses Hacked Version of Normalize 5.0.3 (See section 1.99)</em></p>\n<p class=\"sg\"><b>Naming Patterns</b></p>\n<pre class=\"sg\">\n p ul li (Default HTML Elements)\n.g-global-style__element\n.g-global-style--modifier\n.g-global-style--modifier__element\n.g-global-style__element--modifier\n</pre>","modifiers":[],"deprecated":false,"experimental":false,"reference":"1","markup":null,"css":"@import 'global/g--functions/g--functions';\n\n// @import 'global/variables';\n// @import 'global/mixins';\n// @import 'global/vendor/normalize';\n// @import 'global/g-type';\n// @import 'global/g-link';\n// @import 'global/g-list';\n// @import 'global/g-svg';\n// @import 'global/g-form';\n// @import 'global/g-image';\n// @import 'global/g-table';\n// @import 'global/print';","syntax":"scss","file":"style.scss","wrapper":"<sg-wrapper-content/>","variables":[],"fileHash":"fb578f5624e9d305f6a33f2df19ef188"},{"header":"Components","description":"<p class=\"sg\">Components are discreet parts of the UI. They general can scale to fit a\nrange of sizes of containers (See Layouts).</p>\n<p class=\"sg\">Components can appear inside components. Components\nMay adjust their own layouts depending on the size of their containers.\nThis is typical done with <a href=\"https://github.com/Snugug/eq.js\" class=\"sg\">eq.js</a> script\nfor element queries.</p>\n<p class=\"sg\"><b>Naming Patterns</b></p>\n<pre class=\"sg\">\n.c-component__element\n.c-component--modifier\n.c-component--modifier__element\n.c-component__element--modifier\n</pre>","modifiers":[],"deprecated":false,"experimental":false,"reference":"2","markup":null,"css":"// Components (with EJ.js based layouts)\n// @import 'components/c-btn/c-btn';\n// @import 'components/c-logo';\n// @import 'components/c-nav/c-nav';\n// @import 'components/c-tab/c-tab';\n// @import 'components/c-quote';\n// @import 'components/c-accordion/c-accordion';\n// @import 'components/c-pager/c-pager';\n\n// Component Partial Naming Examples\n// @import 'components/btn--icon';\n// @import 'components/btn--accordion';\n// @import 'components/menu-main';\n// @import 'components/menu-mobile';\n// @import 'components/menu-subfooter';\n// @import 'components/masthead';\n// @import 'components/summary';\n// @import 'components/progress';\n// @import 'components/action';\n// @import 'components/person';\n// @import 'components/ad';\n// @import 'components/alert';\n// @import 'components/listing';\n// @import 'components/tabs';\n// @import 'components/toggle';\n// @import 'components/message';\n// @import 'components/calendar';\n// @import 'components/carousel'; <-- Boo ;(\n// @import 'components/card';\n// @import 'components/callout';\n// @import 'components/cart';","syntax":"scss","file":"style.scss","wrapper":"<sg-wrapper-content/>","variables":[],"fileHash":"fb578f5624e9d305f6a33f2df19ef188"},{"header":"Layouts","description":"<p class=\"sg\"></p><h2 id=\"custom-layouts\" class=\"sg\" name=\"custom-layouts\">Custom Layouts</h2><p class=\"sg\"></p>\n<p class=\"sg\">Layouts position components in a page. They often implenent width based\nMedia queries in a mobile first strategy. Typically there is a layout\npartial for different regions in the website like the page (wrapper),\nheader, footer, etc. These Layouts tend to be unique and not reusable.</p>\n<p class=\"sg\"><b>Naming Patterns</b></p>\n<pre class=\"sg\">\n.l-layout__element\n.l-layout--variation\n.l-layout--modifier__element\n.l-layout__element--modifier\n.l-header\n.l-header__logo\n.l-header__tagline\n.l-header--sticky &gt;&gt; EG. the header is smaller &amp; fixed postion when you scroll...\n.l-header--sticky__logo\n</pre>\n<p class=\"sg\"></p><h2 id=\"reusable-layouts\" class=\"sg\" name=\"reusable-layouts\">Reusable Layouts</h2>\n<h3 id=\"media-queries\" class=\"sg\" name=\"media-queries\">Media Queries</h3><p class=\"sg\"></p>\n<p class=\"sg\">Other layouts are reusable such as generic grid containers. These can be\neither (width) media query or eq.js based layouts.\nColumn layouts express the number of columns with a &quot;cols#&quot; string, and a optionally\na modifer which expresses the number of columns the layout has from smallest\nwidth to largest width.</p>\n<p class=\"sg\"><i> Yes you can indeed used brackets and commas in css if you escape with a backslash</i></p>\n<p class=\"sg\"><b>Media Query Patterns</b></p>\n<pre class=\"sg\">\n.l-2cols &gt;&gt; 2 columns (equal width)\n.l-2cols--1-2 &gt;&gt; 1 column @ default width, 2 columns @ larger width\n.l-5col--1-2-5 &gt;&gt; 1 to 2 to 5 columns as the width increases\n.l-2cols(25,75) &gt;&gt; 2 columns in ratio of 25% to 75%\n</pre>\n<p class=\"sg\"></p><h3 id=\"eq-js\" class=\"sg\" name=\"eq.js\">eq.js</h3><p class=\"sg\"></p>\n<p class=\"sg\">eq.js &quot;breakpoints&quot; are defined in HTML. This allows them to be more\nflexible as you can simply add or remove &quot;data-eq-pts&quot; in your data attibutes\nof the layout wrapper class. Details are in the <a href=\"https://github.com/Snugug/eq.js\" class=\"sg\">eq.js</a> docs.</p>\n<div hljs=\"\">\n&lt;div class=&quot;l-eq&quot; data-eq-pts=&quot;l-eq--2col: 400 l-eq--3col: 600&quot;&gt; CONTENT\n&lt;/div&gt;\n</div><p class=\"sg\"><b>eq.js Patterns</b>\n<i></i></p>\n<pre class=\"sg\">\n.l-eq--2cols &gt;&gt; 2 columns when\n.l-eq--5cols\n.l-eq--2col--1-2(60,40)  &gt;&gt; 1 to 2 columns. 2 columns in ratio of 60% 40% .\n</pre>","modifiers":[],"deprecated":false,"experimental":false,"reference":"3","markup":null,"css":"// @import 'layouts/l-eq';\n// @import 'layouts/l-page';\n// @import 'layouts/l-form';\n\n// Other Layout Naming Examples\n// @import 'layouts/l-header';\n// @import 'layouts/l-page';\n// @import 'layouts/l-2col';\n// @import 'layouts/l-5col';\n// @import 'layouts/l-megamenu';\n// @import 'layouts/l-footer';\n// @import 'layouts/l-form';\n\n\n\n\n\n// Vendor\n// @import 'vendor/system.base';\n// @import 'vendor/remodal';\n// @import 'vendor/slidebar';\n// @import 'vendor/slick';","syntax":"scss","file":"style.scss","wrapper":"<sg-wrapper-content/>","variables":[],"fileHash":"fb578f5624e9d305f6a33f2df19ef188"},{"header":"Utility","description":"<p class=\"sg\">Generic modifier components. Oftern extended from other components. Each\nUtility should be very specific and do only 1 job. This seciton also documents\nGeneric Mixins and Extendables</p>\n<p class=\"sg\"><b>Utility Naming Patterns</b></p>\n<pre class=\"sg\">\n.u-utility__element\n.u-utility--modifier\n.u-utility--modifier__element\n.u-utility__element--modifier\n</pre>\n<p class=\"sg\"><b>Mixin Naming Patterns</b>\n@TODO</p>\n","modifiers":[],"deprecated":false,"experimental":false,"reference":"4","markup":null,"css":"// Utiltiy Functions\n@import 'utility/u-animation';\n@import 'utility/u-clearfix';\n@import 'utility/u-inline-links';\n@import 'utility/u-list';\n@import 'utility/u-remove-child';\n// @import 'utility/u-text-hide';\n// @import 'utility/u-visually--hidden';","syntax":"scss","file":"style.scss","wrapper":"<sg-wrapper-content/>","variables":[],"fileHash":"fb578f5624e9d305f6a33f2df19ef188"}],"config":{"appRoot":"./","commonClass":"","title":"Style Guide","disableEncapsulation":true,"disableHtml5Mode":true,"readOnly":false,"sideNav":true}}